{
	"additions": 2015,
	"author": { "id": "MDQ6VXNlcjQ5MTAzMjQ3", "is_bot": false, "login": "hannesrudolph", "name": "Hannes Rudolph" },
	"baseRefName": "main",
	"body": "<!--\nThank you for contributing to Roo Code!\n\nBefore submitting your PR, please ensure:\n- It's linked to an approved GitHub Issue.\n- You've reviewed our [Contributing Guidelines](../CONTRIBUTING.md).\n-->\n\n### Related GitHub Issue\n\n<!-- Every PR MUST be linked to an approved issue. -->\n\nCloses: #5480 <!-- Replace with the issue number, e.g., Closes: #123 -->\n\n### Roo Code Task Context (Optional)\n\n<!--\nIf you used Roo Code to help create this PR, you can share public task links here.\nThis helps reviewers understand your development process and provides additional context.\nExample: https://app.roocode.com/share/task-id\n-->\n\nN/A\n\n### Description\n\n<!--\nBriefly summarize the changes in this PR and how they address the linked issue.\nThe issue should cover the \"what\" and \"why\"; this section should focus on:\n- The \"how\": key implementation details, design choices, or trade-offs made.\n- Anything specific reviewers should pay attention to in this PR.\n-->\n\nThis PR implements an interactive UI component for managing terminal command permissions directly from the chat interface. The implementation includes:\n\n**Key Implementation Details:**\n- Created `CommandPatternSelector` component that displays command patterns with allow/deny toggle buttons\n- Integrated pattern extraction using the `shell-quote` library to handle complex shell syntax (pipes, chains, redirects)\n- Added pattern extraction logic that generates human-readable descriptions for common command patterns\n- Implemented state synchronization between UI and VSCode extension state for persistence\n- Added comprehensive test coverage (61 tests) for all new components and utilities\n\n**Design Choices:**\n- Used collapsible UI section to avoid cluttering the command execution display\n- Implemented mutual exclusivity between allow/deny lists to prevent conflicts\n- Prioritized AI-suggested patterns when available, falling back to programmatic extraction\n- Used VSCode theme variables for consistent appearance across different themes\n\n**Translation Updates:**\n- Added new translation keys to all 17 supported languages for the command permissions UI\n- All translations follow the project's localization guidelines\n\n**Areas for Review Focus:**\n- Pattern extraction logic in `commandPatterns.ts` - ensures proper handling of complex shell commands\n- State management integration in `CommandExecution.tsx` - verifies proper synchronization\n- UI/UX of the `CommandPatternSelector` component - accessibility and usability\n\n### Test Procedure\n\n<!--\nDetail the steps to test your changes. This helps reviewers verify your work.\n- How did you test this specific implementation? (e.g., unit tests, manual testing steps)\n- How can reviewers reproduce your tests or verify the fix/feature?\n- Include relevant testing environment details if applicable.\n-->\n\n**Unit Tests Added:**\n- `commandPatterns.spec.ts` (32 tests) - Tests pattern extraction, AI suggestion parsing, and edge cases\n- `CommandPatternSelector.spec.tsx` (13 tests) - Tests UI interactions, state management, and accessibility\n- `CommandExecution.spec.tsx` (16 tests) - Tests integration and message posting\n\n**Manual Testing Steps:**\n1. Open Roo Code in VSCode\n2. Execute a terminal command in the chat (e.g., `npm install express`)\n3. Click \"Manage Command Permissions\" in the command execution block\n4. Verify patterns are extracted correctly (e.g., `npm`, `npm install`)\n5. Click ✓ to add a pattern to the allowed list\n6. Click ✗ to add a pattern to the denied list\n7. Toggle patterns between states and verify visual feedback\n8. Check that changes persist across sessions\n9. Verify integration with existing settings UI\n\n**Test Results:**\n- All 61 unit tests pass\n- Manual testing verified all acceptance criteria\n- Minor lint warnings found but don't affect functionality\n\n### Pre-Submission Checklist\n\n<!-- Go through this checklist before marking your PR as ready for review. -->\n\n- [x] **Issue Linked**: This PR is linked to an approved GitHub Issue (see \"Related GitHub Issue\" above).\n- [x] **Scope**: My changes are focused on the linked issue (one major feature/fix per PR).\n- [x] **Self-Review**: I have performed a thorough self-review of my code.\n- [x] **Testing**: New and/or updated tests have been added to cover my changes (if applicable).\n- [x] **Documentation Impact**: I have considered if my changes require documentation updates (see \"Documentation Updates\" section below).\n- [x] **Contribution Guidelines**: I have read and agree to the [Contributor Guidelines](/CONTRIBUTING.md).\n\n### Screenshots / Videos\n\n<!--\nFor UI changes, please provide before-and-after screenshots or a short video of the *actual results*.\nThis greatly helps in understanding the visual impact of your changes.\n-->\n\n[Screenshots to be added showing the command permissions UI in action]\n\n### Documentation Updates\n\n<!--\nDoes this PR necessitate updates to user-facing documentation?\n- [ ] No documentation updates are required.\n- [ ] Yes, documentation updates are required. (Please describe what needs to be updated or link to a PR in the docs repository).\n-->\n\n- [ ] No documentation updates are required.\n- [ ] Yes, documentation updates are required. (Please describe what needs to be updated or link to a PR in the docs repository).\n\n### Additional Notes\n\n<!-- Add any other context, questions, or information for reviewers here. -->\n\nThis feature enhances the user experience by providing a more intuitive way to manage command permissions without navigating to settings. The implementation follows all existing patterns in the codebase and maintains backward compatibility with the existing permission system.\n\n### Get in Touch\n\n<!--\nPlease provide your Discord username for reviewers or maintainers to reach you if they have questions about your PR\n-->\n\n[Your Discord username]\n<!-- ELLIPSIS_HIDDEN -->\n\n\n----\n\n> [!IMPORTANT]\n> This PR adds a UI component for managing terminal command permissions in the chat interface, with pattern extraction, state synchronization, and comprehensive test coverage.\n> \n>   - **Behavior**:\n>     - Adds `CommandPatternSelector` component in `CommandExecution.tsx` for managing command permissions with allow/deny toggles.\n>     - Integrates `shell-quote` for pattern extraction handling complex shell syntax.\n>     - Synchronizes state between UI and VSCode extension for persistence.\n>   - **Pattern Extraction**:\n>     - Implements pattern extraction in `commandPatterns.ts` to generate descriptions for command patterns.\n>     - Handles complex shell commands like pipes, chains, and redirects.\n>   - **Testing**:\n>     - Adds 61 tests across `commandPatterns.spec.ts`, `CommandPatternSelector.spec.tsx`, and `CommandExecution.spec.tsx`.\n>   - **Translations**:\n>     - Updates translation keys for 17 languages for the command permissions UI.\n> \n> <sup>This description was created by </sup>[<img alt=\"Ellipsis\" src=\"https://img.shields.io/badge/Ellipsis-blue?color=175173\">](https://www.ellipsis.dev?ref=RooCodeInc%2FRoo-Code&utm_source=github&utm_medium=referral)<sup> for b358c958bff8d817e4f848bc1683a2adff45c283. You can [customize](https://app.ellipsis.dev/RooCodeInc/settings/summaries) this summary. It will automatically update as commits are pushed.</sup>\n\n\n<!-- ELLIPSIS_HIDDEN -->",
	"changedFiles": 24,
	"deletions": 24,
	"files": [
		{ "path": "webview-ui/src/components/chat/CommandExecution.tsx", "additions": 76, "deletions": 24 },
		{ "path": "webview-ui/src/components/chat/CommandPatternSelector.tsx", "additions": 130, "deletions": 0 },
		{
			"path": "webview-ui/src/components/chat/__tests__/CommandExecution.spec.tsx",
			"additions": 591,
			"deletions": 0
		},
		{
			"path": "webview-ui/src/components/chat/__tests__/CommandPatternSelector.spec.tsx",
			"additions": 252,
			"deletions": 0
		},
		{ "path": "webview-ui/src/i18n/locales/ca/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/de/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/en/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/es/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/fr/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/hi/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/id/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/it/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/ja/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/ko/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/nl/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/pl/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/pt-BR/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/ru/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/tr/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/vi/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/zh-CN/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/i18n/locales/zh-TW/chat.json", "additions": 16, "deletions": 0 },
		{ "path": "webview-ui/src/utils/__tests__/commandPatterns.spec.ts", "additions": 501, "deletions": 0 },
		{ "path": "webview-ui/src/utils/commandPatterns.ts", "additions": 177, "deletions": 0 }
	],
	"headRefName": "feat/issue-5480-command-permissions-ui",
	"number": 5798,
	"state": "OPEN",
	"title": "feat: Add terminal command permissions UI to chat interface (#5480)",
	"url": "https://github.com/RooCodeInc/Roo-Code/pull/5798"
}
