{"additions":398,"author":{"id":"U_kgDOBZIB4w","is_bot":false,"login":"KJ7LNW","name":""},"baseRefName":"main","body":"Fixes: #5844\n\n## Performance Optimization for Environment Details\n\n### Problem\nEnvironment details are repeatedly processed throughout AI conversations even when they haven't changed. This creates unnecessary overhead and token usage, resulting in:\n- Increased token consumption for unchanged context\n- Higher costs per conversation\n- Slower response times due to redundant processing\n- Larger context windows filled with duplicate information\n- Reduced model focus on actual user queries due to attention dilution\n\n### Implementation\nThis PR implements a comprehensive optimization that:\n\n1. **Stores Previous State**: Added `prevEnvDetails` property to Task class to maintain the last environment state\n2. **Implements Recursive Comparison**: Created helper functions that efficiently traverse object structures\n3. **Returns Only Differences**: Modified `getEnvironmentDetails` to return only changed properties\n4. **Preserves Structure**: Maintains the same XML output format while reducing payload size\n\nThe implementation builds on the recent modularization of environment details, leveraging the clean separation of concerns to efficiently track and compare changes across different context types.\n\n### Benefits\n- **Reduced Token Usage**: Only changed environment details are included in context\n- **Lower API Costs**: Less token consumption means lower costs per conversation\n- **Faster Processing**: Smaller payloads lead to quicker model responses\n- **Improved Context Efficiency**: More context space available for actual conversation\n- **Better User Experience**: More responsive UI with reduced overhead\n<!-- ELLIPSIS_HIDDEN -->\n\n\n----\n\n> [!IMPORTANT]\n> Optimizes `getEnvironmentDetails` to return only differences, reducing token usage and improving performance, with modular context functions and updated tests.\n> \n>   - **Behavior**:\n>     - `getEnvironmentDetails` now returns only differences in environment details, reducing token usage and improving performance.\n>     - Introduces `_envDiff()` and `_objIsEqual()` for recursive comparison of environment details.\n>     - Maintains XML output format with reduced payload size.\n>   - **Context Functions**:\n>     - Adds `getVscodeEditorContext`, `getTerminalContext`, `getFileContext`, `getMetadataContext`, `getWorkspaceContext`, and `getTodoContext` for modular environment detail retrieval.\n>   - **Task Class**:\n>     - Adds `prevEnvDetails` property to `Task` class to store previous environment state.\n>   - **Tests**:\n>     - Updates `getEnvironmentDetails.spec.ts` to test new behavior and context functions.\n> \n> <sup>This description was created by </sup>[<img alt=\"Ellipsis\" src=\"https://img.shields.io/badge/Ellipsis-blue?color=175173\">](https://www.ellipsis.dev?ref=RooCodeInc%2FRoo-Code&utm_source=github&utm_medium=referral)<sup> for 35d22e00ca16060b55d8f5926f30f4d0625a7825. You can [customize](https://app.ellipsis.dev/RooCodeInc/settings/summaries) this summary. It will automatically update as commits are pushed.</sup>\n\n\n<!-- ELLIPSIS_HIDDEN -->","changedFiles":10,"comments":[{"id":"IC_kwDONIq5lM6365OM","author":{"login":"daniel-lxs"},"authorAssociation":"COLLABORATOR","body":"Hey @KJ7LNW, I notice that there are unrelated changes on this PR, can you take a look?","createdAt":"2025-07-17T22:08:12Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3085669260","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM637b8f","author":{"login":"KJ7LNW"},"authorAssociation":"COLLABORATOR","body":"> Hey @KJ7LNW, I notice that there are unrelated changes on this PR, can you take a look?\r\n\r\nthat is a strange glitch.\r\n\r\nDid somebody force pushed to `main` around v3.23.12? My tag v3.23.12 tag no longer lines up.\r\n\r\nanyway whatever the cause I will rebase.","createdAt":"2025-07-17T23:22:41Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3085811487","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM637e4I","author":{"login":"KJ7LNW"},"authorAssociation":"COLLABORATOR","body":"please run this through an evaluation and see if it helps.  I think this will guarantee lower cost, and it will probably provide better model focus as well---however, a change like this that has been so integral to the discussion for so long, this really needs to be eval-tested before rolling it out.\r\n\r\nI am leaving this in draft, but marked as ready for review:\r\n\r\nPlease let me know what you find after running an evaluation.","createdAt":"2025-07-17T23:27:17Z","includesCreatedEdit":true,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3085823496","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM63980I","author":{"login":"hannesrudolph"},"authorAssociation":"COLLABORATOR","body":"evals came in worse by about 1% on sonnet 4. ","createdAt":"2025-07-18T02:37:43Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3086470408","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM63-f4X","author":{"login":"hannesrudolph"},"authorAssociation":"COLLABORATOR","body":"Looks to be netural in its impact in evals. ","createdAt":"2025-07-18T03:48:27Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3086614039","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM63-gI9","author":{"login":"hannesrudolph"},"authorAssociation":"COLLABORATOR","body":"@roomote-agent run pr-reviewer mode on this and then fix the critical issues with pr-fixer mode","createdAt":"2025-07-18T03:48:51Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3086615101","viewerDidAuthor":false},{"id":"IC_kwDONIq5lM63-hZO","author":{"login":"roomote"},"authorAssociation":"NONE","body":"ðŸ‘‹ I've received your request to review this PR and fix critical issues. Starting with pr-reviewer mode analysis now...","createdAt":"2025-07-18T03:50:21Z","includesCreatedEdit":false,"isMinimized":false,"minimizedReason":"","reactionGroups":[],"url":"https://github.com/RooCodeInc/Roo-Code/pull/5846#issuecomment-3086620238","viewerDidAuthor":true}],"deletions":305,"files":[{"path":"src/core/environment/__tests__/getEnvironmentDetails.spec.ts","additions":33,"deletions":30},{"path":"src/core/environment/context/file.ts","additions":13,"deletions":0},{"path":"src/core/environment/context/metadata.ts","additions":65,"deletions":0},{"path":"src/core/environment/context/terminal.ts","additions":76,"deletions":0},{"path":"src/core/environment/context/todo.ts","additions":31,"deletions":0},{"path":"src/core/environment/context/vscode.ts","additions":50,"deletions":0},{"path":"src/core/environment/context/workspace.ts","additions":56,"deletions":0},{"path":"src/core/environment/getEnvironmentDetails.ts","additions":73,"deletions":237},{"path":"src/core/environment/reminder.ts","additions":0,"deletions":38},{"path":"src/core/task/Task.ts","additions":1,"deletions":0}],"headRefName":"optimize-env-details","number":5846,"reviews":[{"id":"PRR_kwDONIq5lM60tDb4","author":{"login":"copilot-pull-request-reviewer"},"authorAssociation":"NONE","body":"## Pull Request Overview\n\nThis PR implements a performance optimization for environment details by introducing a differential approach that only returns changed environment data. The optimization leverages modular context functions to efficiently track and compare environment states across AI conversations.\n\n- Introduces environment details diffing to reduce token usage and improve performance by only sending changed data\n- Refactors environment details generation into modular context functions for better maintainability\n- Switches from markdown-based to XML-based output format for structured data representation\n\n### Reviewed Changes\n\nCopilot reviewed 10 out of 10 changed files in this pull request and generated 2 comments.\n\n<details>\n<summary>Show a summary per file</summary>\n\n| File | Description |\r\n| ---- | ----------- |\r\n| `src/core/task/Task.ts` | Adds `prevEnvDetails` property to store previous environment state |\r\n| `src/core/environment/reminder.ts` | Removes deprecated reminder formatting function |\r\n| `src/core/environment/getEnvironmentDetails.ts` | Refactors to use modular context functions and implements diffing algorithm |\r\n| `src/core/environment/context/workspace.ts` | Extracts workspace context generation into dedicated module |\r\n| `src/core/environment/context/vscode.ts` | Extracts VSCode editor context generation into dedicated module |\r\n| `src/core/environment/context/todo.ts` | Extracts todo context generation into dedicated module |\r\n| `src/core/environment/context/terminal.ts` | Extracts terminal context generation into dedicated module |\r\n| `src/core/environment/context/metadata.ts` | Extracts metadata context generation into dedicated module |\r\n| `src/core/environment/context/file.ts` | Extracts file context generation into dedicated module |\r\n| `src/core/environment/__tests__/getEnvironmentDetails.spec.ts` | Updates tests to match new XML-based output format |\n</details>\n\n\n\n<details>\n<summary>Comments suppressed due to low confidence (6)</summary>\n\n**src/core/environment/getEnvironmentDetails.ts:48**\n* [nitpick] The function name `_envDiff` uses a leading underscore convention typically reserved for private members in classes. Consider renaming to `calculateEnvironmentDiff` or `getEnvironmentDiff` for better clarity.\n```\nfunction _envDiff(current: any, previous: any): any {\n```\n**src/core/environment/getEnvironmentDetails.ts:81**\n* [nitpick] The function name `_objIsEqual` uses a leading underscore convention typically reserved for private members in classes. Consider renaming to `isObjectEqual` or `areObjectsEqual` for better clarity.\n```\nfunction _objIsEqual(a: any, b: any): boolean {\n```\n**src/core/environment/context/vscode.ts:45**\n* The property names `t` and `@p` are cryptic abbreviations. Consider using more descriptive names like `tabs` and `@path` for better code readability.\n```\n\t\t\t\t\tt: allowedOpenTabs.map((p) => ({ \"@p\": p })),\n```\n**src/core/environment/context/metadata.ts:33**\n* The property name `@I` is cryptic. Consider using a more descriptive name like `@iso` or `@timestamp` for better code readability.\n```\n\t\t\"@I\": isoDateWithOffset,\n```\n**src/core/environment/context/metadata.ts:38**\n* The property name `@t` is cryptic. Consider using a more descriptive name like `@total` or `@amount` for better code readability.\n```\n\t\t\"@t\": totalCost !== null ? totalCost.toFixed(2) : \"0.00\",\n```\n**src/core/environment/context/metadata.ts:39**\n* The property name `@c` is cryptic. Consider using a more descriptive name like `@currency` for better code readability.\n```\n\t\t\"@c\": \"USD\",\n```\n</details>\n\n","submittedAt":"2025-07-18T03:50:08Z","includesCreatedEdit":false,"reactionGroups":[],"state":"COMMENTED","commit":{"oid":"35d22e00ca16060b55d8f5926f30f4d0625a7825"}}],"state":"OPEN","title":"perf: optimize environment details by omitting identical records","url":"https://github.com/RooCodeInc/Roo-Code/pull/5846"}
